properties(
    [parameters(
        [
            string(name: 'branch' , defaultValue: 'master', description: '', trim: true)
        ]
    )]
)

node("builder") {

    def GIT_BRANCH="${params.branch}"

    stage("clean") {
        deleteDir()
    }

    stage("build sdk") {
        withCredentials([string(credentialsId: 'NPM_SDK', variable: 'Secret')]) {
            checkout poll: false, scm: [$class: 'GitSCM', branches: [[name: "${GIT_BRANCH}"]], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'LocalBranch'], [$class: 'CheckoutOption'], [$class: 'SubmoduleOption', disableSubmodules: false, parentCredentials: true, recursiveSubmodules: true, reference: '', trackingSubmodules: false]], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'cswci-gen', url: 'git@github-chf01.synamedia.com:hyperscale/hs-sdk.git']]]
            withDockerContainer("node:16.13.1-buster") {
                sh '''
                    npm i
                    npm config set @Synamedia:registry https://npm.pkg.github.com
                    npm config set -- //npm.pkg.github.com/:_authToken $Secret
                    npm publish --tag "alpha"
                '''
                SDK_VERSION = sh(returnStdout: true, script: "node -p \"require('./package.json').version\"").trim()
            }
            print "New sdk version is ${SDK_VERSION}"
        }
    }
    
    stage("Tag") {
        if ("master" == GIT_BRANCH) {
                sh """
                    git tag ${SDK_VERSION} -m 'Automatic build of ${SDK_VERSION}'
                    git push origin ${SDK_VERSION}
                """
            }
    }

    currentBuild.description = "${SDK_VERSION}"
    print "current build description is ${currentBuild.description}"

}
