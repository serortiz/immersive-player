!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.hs=t():e.hs=t()}(this,(()=>(()=>{"use strict";var e={d:(t,i)=>{for(var n in i)e.o(i,n)&&!e.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:i[n]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{ClientAssertionError:()=>U,ConnectReason:()=>F,alarmManager:()=>v,auth:()=>N,deviceManager:()=>m,envInfo:()=>Q,getClientAssertion:()=>M,getConnectReason:()=>q,getDeviceInfo:()=>J,getPlatformInfo:()=>P,getTriggerEvent:()=>L,init:()=>C,isRunningE2E:()=>X,lifecycle:()=>l,messageManager:()=>S,remotePlayer:()=>y,setTimezone:()=>R,uiReady:()=>D,writeLicenseResponse:()=>x});const i={version:"3.19.5"},{version:n}=i;function s(){return Math.round(1e5*Math.random())+"-"+P().sessionInfo?.connectionId}class o{constructor(e){this.logFields=e}debug(...e){console.debug(this.formatLogString(e))}log(...e){console.log(this.formatLogString(e))}info(...e){console.info(this.formatLogString(e))}warn(...e){console.warn(this.formatLogString(e))}error(...e){console.error(this.formatLogString(e))}withFields(e){return new o({...this.logFields,...e})}formatLogString(e){let t="[hs-sdk] "+e.join(" ");return this.logFields&&(t+=" [log-fields] "+JSON.stringify(this.logFields)),t}}const r=new o({sdkVersion:n,url:window?.location?.href??""}),a=new class{sessionInfoStr="{}";get sessionInfoObj(){try{return JSON.parse(this.sessionInfoStr)}catch(e){return void r.warn("Failed to return sdk")}}setSessionInfoStr(e){try{JSON.parse(e)}catch(e){throw Error("Failed to parse sessionInfo")}this.sessionInfoStr=e}};class d extends EventTarget{constructor(){super(),"undefined"!=typeof document&&document.addEventListener("hs/uistatechange",(e=>{r.log("Got hs/uistatechange",e.detail);const t=new Event("onstatechange");t.state=e.detail,this.dispatchEvent(t)}))}getState(){if(window.cefQuery)return new Promise(((e,t)=>{window.cefQuery&&window.cefQuery({request:"uiState",persistent:!1,onSuccess:t=>{r.log(`uiState request successfully returned '${t}'`),e(t)},onFailure:(e,i)=>{r.error(`uiState request failed: ${e} ${i}`),t(i)}})}));r.warn("lifecycle getState is not supported if NOT running e2e")}moveToForeground(){if(window.cefQuery){const e=s(),t=r.withFields({FCID:e});t.log("lifecycle moveToForeground: sending uiActiveRequest action"),window.cefQuery({request:JSON.stringify({action:"uiActiveRequest",fcid:e}),persistent:!1,onSuccess:()=>{t.log("uiActiveRequest successfully sent")},onFailure:(e,i)=>{t.error(`uiActiveRequest failed: ${e} ${i}`)}})}else r.error("lifecycle moveToForeground: window.cefQuery is undefined")}switchTenant(e){if(e&&e.length>0){if(e===P().sessionInfo?.tenantId)return r.warn(`SwitchTenant requires a different tenantId than the current one. CurrentTenantId=${P().sessionInfo?.tenantId} and tenantId=${e}`),Promise.reject("SwitchTenant requires a different tenantId than the current one");const t=P().sessionInfo?.homeSessionInfo?.tenantInfo?.contentHubTenantId,i=P().sessionInfo?.homeSessionInfo?.tenantId;return r.log(`SwitchTenant for ${e}`),window.cefQuery?new Promise(((n,o)=>{const a=s(),d=r.withFields({FCID:a}),l={type:"reconnect",fcid:a,session:btoa(JSON.stringify({tenantId:e,...P().sessionInfo?.tenantId===t&&e!==i&&{returnToTenantId:t}}))},c={target:"TC",waitForResponse:!1,message:JSON.stringify(l)};window.cefQuery({request:JSON.stringify(c),persistent:!1,onSuccess:()=>{d.log("SwitchTenant request successfully sent"),n(!0)},onFailure:(e,t)=>{d.error(`SwitchTenant failed: ${e} ${t}`),o(`SwitchTenant failed: ${e} ${t}`)}})})):(r.warn("SwitchTenant is not supported if NOT running e2e"),Promise.reject("SwitchTenant is not supported if NOT running e2e"))}return r.warn("SwitchTenant requires a valid tenantId string parameter"),Promise.reject("SwitchTenant requires a valid tenantId string parameter")}exitApplication(){return window.cefQuery?new Promise(((e,t)=>{const i=s(),n=r.withFields({FCID:i});let o,a;P().sessionInfo?.homeSessionInfo&&(P().sessionInfo?.returnToTenantId||P().sessionInfo?.homeSessionInfo.tenantId!==P().sessionInfo?.tenantId)?(a={type:"reconnect",fcid:i},P().sessionInfo?.returnToTenantId&&(a.session=btoa(JSON.stringify({tenantId:P().sessionInfo?.returnToTenantId}))),o={target:"TC",waitForResponse:!1,message:JSON.stringify(a)}):(a={type:"launchHomeApplication",fcid:i},o={target:"UI-Streamer",waitForResponse:!1,message:JSON.stringify(a)}),window.cefQuery({request:JSON.stringify(o),persistent:!1,onSuccess:()=>{n.log(`exitApplication request with type: '${a.type}' successfully sent`),e(!0)},onFailure:(e,i)=>{n.error(`exitApplication request with type: '${a.type}' failed: ${e} ${i}`),t(`exitApplication request with type: '${a.type}' failed: ${e} ${i}`)}})})):(r.warn("exitApplication is not supported if NOT running e2e"),Promise.reject("exitApplication is not supported if NOT running e2e"))}}const l=new d,c=e=>JSON.parse(JSON.stringify(e));class u extends Error{constructor(e,t){super(t),this.code=e,this.msg=t}}function f(){const e=window.getPlaybackInfo?window.getPlaybackInfo():JSON.stringify({playbackPosition:0,assetDuration:0});let t;try{t=JSON.parse(e)}catch(i){r.error(`Playback Info parse failed. playbackStr = ${e}`),t={playbackPosition:0,assetDuration:0}}return t}class g extends EventTarget{constructor(){super(),this._config={preferredAudioLanguage:"",preferredSubtitlesLanguage:""},this._selectedAudioTrack="",this._selectedSubtitlesTrack="",this._availableAudioTracks=[],this._availableTextTracks=[],this._textTrackVisibility=!1,this._ptsSessionId=0,this._videoElement=void 0,this._isInitialized=!1,"undefined"!=typeof document&&document.addEventListener("hs/playbackInfoEvent",(()=>{r.info("Got hs/playbackInfoEvent"),this.dispatchEvent(new Event("timeupdate"))})),"undefined"!=typeof document&&document.addEventListener("hs/playback",(e=>{r.info("Got hs/playback event with detail",JSON.stringify(e?.detail)),this._availabilityStartTime=e?.detail?.availabilityStartTime,this._updateTracks(e?.detail),this.dispatchEvent(new Event("tracksupdate"))})),"undefined"!=typeof document&&document.addEventListener("EOS",(()=>{r.info("Got EOS event"),this.dispatchEvent(new Event("ended"))})),"undefined"!=typeof document&&document.addEventListener("hs/EOS",(()=>{r.info("Got hs/EOS event"),this.dispatchEvent(new Event("ended"))})),"undefined"!=typeof document&&document.addEventListener("hs/ui_inactive",(()=>{r.info("Got hs/ui_inactive event")})),"undefined"!=typeof document&&document.addEventListener("ERR",(e=>{delete e?.detail?.type,delete e?.detail?.eventCode,r.info("Got ERR event",JSON.stringify(e?.detail)),this.dispatchEvent(new CustomEvent("error",e))})),"undefined"!=typeof document&&document.addEventListener("hs/ERR",(e=>{r.info("Got hs/ERR event"),delete e?.detail?.type,delete e?.detail?.eventCode,this.dispatchEvent(new CustomEvent("error",e))})),"undefined"!=typeof document&&document.addEventListener("hs/getLicense",(e=>{r.info("Got hs/getLicense event");const t=e?.detail,i=Uint8Array.from(t.request,(e=>e.charCodeAt(0))),n=new ArrayBuffer(i.byteLength);new Uint8Array(n).set(i),this.licenseRequest=n;const s=t.fcid,o=t.sessionId,a=new CustomEvent("license-request",{detail:{licenseRequest:n}});a.writeLicenseResponse=(e,t)=>{x(e,t,s,o)},this.dispatchEvent(a)}))}LoadMode=Object.freeze({NOT_LOADED:"notLoaded",LOADING:"loading",LOADED:"loaded"});async _init(e,t){let i={isLoaded:!1,playbackUrl:""};if(window.cefQuery){const e=s(),t=r.withFields({FCID:e}),n={type:"playerState",fcid:e},o={target:"UI-Streamer",waitForResponse:!1,message:JSON.stringify(n)};try{const e=await new Promise(((e,i)=>{window.cefQuery({request:JSON.stringify(o),persistent:!1,onSuccess:i=>{t.log("playerState request successfully returned",i),e(i)},onFailure:(e,n)=>{t.error(`playerState request failed: ${e} ${n}`),i()}})}));i=JSON.parse(e)}catch{t.error("either failed to get or failed to parse player state")}}this._loadMode=i?.isLoaded?this.LoadMode.LOADED:this.LoadMode.NOT_LOADED,this._loadedUrl=i?.playbackUrl||"",this._isInitialized=!0,this._setPlayableUriTimeout=e?.setPlayableUriTimeout??5e3,this._requestVideoFrameInfo=e?.requestVideoFrameInfo??!0;let n={};try{n=JSON.parse(t?.playbackMetadata||"{}")}catch(e){r.error(`failed to parse playbackMetadata: ${e.message}`)}this._availabilityStartTime=n.availabilityStartTime,this._updateTracks(n)}_updateTracks(e){if(this._availableAudioTracks=e?.availableAudioTracks||this._availableAudioTracks,this._availableTextTracks=e?.availableSubtitlesTracks||this._availableTextTracks,"VOD"===e?.assetType&&(this._availableTextTracks=function(e){if(!e||e.length<1)return e;e.sort(((e,t)=>e.lang.toLowerCase()>t.lang.toLowerCase()?1:-1));const t=[{lang:"af",id:"*:af"},{lang:"ar",id:"*:ar"},{lang:"az",id:"*:az"},{lang:"bg",id:"*:bg"},{lang:"bs",id:"*:bs"},{lang:"ca",id:"*:ca"},{lang:"cs",id:"*:cs"},{lang:"cy",id:"*:cy"},{lang:"da",id:"*:da"},{lang:"de",id:"*:de"},{lang:"el",id:"*:el"},{lang:"en",id:"*:en"},{lang:"es",id:"*:es"},{lang:"es-MX",id:"*:es-MX"},{lang:"et",id:"*:et"},{lang:"fi",id:"*:fi"},{lang:"fr",id:"*:fr"},{lang:"fr-CA",id:"*:fr-CA"},{lang:"ga",id:"*:ga"},{lang:"ha",id:"*:ha"},{lang:"he",id:"*:he"},{lang:"hr",id:"*:hr"},{lang:"ht",id:"*:ht"},{lang:"hu",id:"*:hu"},{lang:"id",id:"*:id"},{lang:"is",id:"*:is"},{lang:"it",id:"*:it"},{lang:"kk",id:"*:kk"},{lang:"lt",id:"*:lt"},{lang:"lv",id:"*:lv"},{lang:"mk",id:"*:mk"},{lang:"mn",id:"*:mn"},{lang:"ms",id:"*:ms"},{lang:"mt",id:"*:mt"},{lang:"nl",id:"*:nl"},{lang:"no",id:"*:no"},{lang:"pl",id:"*:pl"},{lang:"pt",id:"*:pt"},{lang:"pt-PT",id:"*:pt-PT"},{lang:"ro",id:"*:ro"},{lang:"ru",id:"*:ru"},{lang:"sk",id:"*:sk"},{lang:"sl",id:"*:sl"},{lang:"so",id:"*:so"},{lang:"sq",id:"*:sq"},{lang:"sr",id:"*:sr"},{lang:"sv",id:"*:sv"},{lang:"sw",id:"*:sw"},{lang:"tl",id:"*:tl"},{lang:"tr",id:"*:tr"},{lang:"uk",id:"*:uk"},{lang:"uz",id:"*:uz"},{lang:"vi",id:"*:vi"},{lang:"zh",id:"*:zh"}],i=[...e];for(const n of t)e.find((e=>e.lang===n.lang))||(n.autoTranslate=!0,i.push(n));return i}(this._availableTextTracks)),this._availableAudioTracks){const e=this._availableAudioTracks.find((e=>!0===e.selected));this._selectedAudioTrack=e?.id||""}if(this._availableTextTracks){const e=this._availableTextTracks.find((e=>!0===e.selected));e?(this._selectedSubtitlesTrack=e.id,this._textTrackVisibility=!0):(this._selectedSubtitlesTrack="",this._textTrackVisibility=!1)}}getConfiguration(){return c(this._config)}configure(e){Object.entries(e).forEach((([e,t])=>{void 0!==this._config[e]&&(this._config[e]=t)}))}_changeLoadMode(e){this._loadMode!==e&&(this._loadMode=e,this.dispatchEvent(new Event("onloadmodechange")))}_handle_video_frame_info(e){if(!this._requestVideoFrameInfo||void 0===e)return void(this._videoElement=void 0);const t=s(),i=r.withFields({fcid:t}),n=(e,i)=>{const s={type:"currentFramePTS",fcid:t,currentFramePTS:i.mediaTime.toString(),ptsSessionId:this._ptsSessionId},o={target:"UI-Streamer",waitForResponse:!1,message:JSON.stringify(s)};window.cefQuery({request:JSON.stringify(o),persistent:!1}),this._videoElement?.requestVideoFrameCallback(n)};i.log("handle_video_frame_pts: requesting video frame  info"),void 0!==this._videoElement&&this._videoElement===e||(e.requestVideoFrameCallback(n),e.addEventListener("loadstart",(e=>{this._ptsSessionId++,r.info("videoElement, loadstart ptsSessionId=",this._ptsSessionId," event=",e)}))),this._videoElement=e}_reset(){this._availableAudioTracks=[],this._availableTextTracks=[],this._selectedAudioTrack="",this._selectedSubtitlesTrack="",this._availabilityStartTime=void 0}registerVideoElement(e){this._handle_video_frame_info(e)}async load(e,t){if(!this._isInitialized)throw new u(6500,"Cannot call load() if remote player is not initialized");if(e&&window.cefQuery){const i=await l.getState();if("background"===i||"inTransitionToBackground"===i)throw new u(6002,"Cannot call load() while in state 'background' or 'inTransitionToBackground'");if(this._loadMode===this.LoadMode.LOADING)throw new u(6501,"Cannot call load() while previous load is still in progress");this._reset();const n=this._loadMode;return this._changeLoadMode(this.LoadMode.LOADING),new Promise(((i,o)=>{this.currentTime=0;const a=s(),d=t??0,l=r.withFields({FCID:a,loadUrl:e,playbackPosition:d});l.log("remotePlayer load: sending setPlayableUri request");const c={type:"setPlayableUri",url:e,timeout:this._setPlayableUriTimeout,autoPlay:!1,playbackPosition:d,fcid:a},f={target:"TC",waitForResponse:!0,message:JSON.stringify(c)};let g=0;const y=Date.now(),w=window.cefQuery({request:JSON.stringify(f),persistent:!1,onSuccess:()=>{const n=Date.now()-y;l.withFields({duration:n}).log(`setPlayableUri completed successfully after ${n} ms`),t>0&&(this.currentTime=t),g&&(clearTimeout(g),g=0),this._changeLoadMode(this.LoadMode.LOADED),this._loadedUrl=e,i()},onFailure:(e,t)=>{const i=Date.now()-y;l.withFields({duration:i}).log(`setPlayableUri failed after ${i} ms. Error code: ${e}, error message: ${t}`),g&&(clearTimeout(g),g=0),99===e?this._changeLoadMode(n):(this._changeLoadMode(this.LoadMode.NOT_LOADED),this._loadedUrl=""),o(new u(e,t))}});l.log(`window.cefQuery for setPlayableUri returned query id ${w}`);const p=this._setPlayableUriTimeout+1e3;g=setTimeout((()=>{l.log(`setPlayableUri reached timeout of ${p} ms, canceling query id ${w}`),window.cefQueryCancel(w),this._changeLoadMode(this.LoadMode.NOT_LOADED),this._loadedUrl="",o(new u(6e3,`load reached timeout of ${p} ms`))}),p,w)}))}r.error("remotePlayer load: either window.cefQuery or url is undefined")}unload(){r.warn("unload() api is deprecated since version 3.14.0, no need to call unload() anymore at the end of playback")}play(){if(!this._isInitialized)throw new u(6500,"Cannot call play() if remote player is not initialized");if(window.cefQuery){if(this._loadMode!==this.LoadMode.LOADED)throw new u(6001,"Cannot call play() if player is not loaded");const e=s(),t=r.withFields({FCID:e});t.log("remotePlayer play: sending play action");const i=this._selectedAudioTrack||this._config.preferredAudioLanguage||"";let n="";this._textTrackVisibility&&(n=this._selectedSubtitlesTrack||this._config.preferredSubtitlesLanguage||""),window.cefQuery({request:JSON.stringify({action:"play",fcid:e,audioLanguage:i,subtitlesLanguage:n}),persistent:!1,onSuccess:()=>{t.log("play action was successfully sent")},onFailure:(e,i)=>{t.log(`failed to send play action: ${e} ${i}`)}})}else r.error("remotePlayer play: window.cefQuery is undefined")}pause(){if(!this._isInitialized)throw new u(6500,"Cannot call pause() if remote player is not initialized");if(window.cefQuery){if(this._loadMode!==this.LoadMode.LOADED)throw new u(6001,"Cannot call pause() if player is not loaded");const e=s(),t=r.withFields({FCID:e});t.log("remotePlayer pause: sending pause request");const i={type:"senzaPlayer",action:"pause",fcid:e},n={target:"TC",waitForResponse:!1,message:JSON.stringify(i)};window.cefQuery({request:JSON.stringify(n),persistent:!1,onSuccess:()=>{t.log("pause request successfully sent")},onFailure:(e,i)=>{t.error(`pause request failed: ${e} ${i}`)}})}else r.error("remotePlayer pause: window.cefQuery is undefined")}getAssetUri(){if(!this._isInitialized)throw new u(6500,"Cannot call getAssetUri() if remote player is not initialized");return this._loadedUrl}getLoadMode(){if(!this._isInitialized)throw new u(6500,"Cannot call getLoadMode() if remote player is not initialized");return this._loadMode}getTextTracks(){return c(this._availableTextTracks)}getAudioTracks(){return c(this._availableAudioTracks)}selectAudioTrack(e){for(const t of this.getAudioTracks())if(t.id===e)return void(this._selectedAudioTrack=e);r.warn(`Invalid audioTrackId ${e}`)}selectTextTrack(e){for(const t of this.getTextTracks())if(t.id===e)return void(this._selectedSubtitlesTrack=e);r.warn(`Invalid textTrackId ${e}`)}setTextTrackVisibility(e){const t=this._textTrackVisibility;if("boolean"!=typeof e)throw new TypeError("visible parameter must be a boolean");const i=e;i!==t&&(this._textTrackVisibility=i,i||(this._selectedSubtitlesTrack=""))}get currentTime(){return f()?.playbackPosition}set currentTime(e){!function(e){try{const t=JSON.stringify(e);window.setPlaybackInfo&&window.setPlaybackInfo(t)}catch(e){r.error("Playback Info to json string failed")}}({playbackPosition:e})}get duration(){return f()?.assetDuration}get textTrackVisibility(){return this._textTrackVisibility}getPresentationStartTimeAsDate(){return void 0===this._availabilityStartTime?null:new Date(1e3*this._availabilityStartTime)}}const y=new g;"undefined"!=typeof window&&(window.remotePlayer=y);const w={};class p extends EventTarget{constructor(){super(),w.level=0,w.quality=0,w.ssid="unknown",w.bssid="unknown","undefined"!=typeof document&&document.addEventListener("wifiSignalReport",(e=>{r.log("Got wifiSignalReport",JSON.stringify(e.detail)),w.level=e.detail.level,w.quality=e.detail.quality,w.ssid=e.detail.ssid,w.bssid=e.detail.bssid,this.dispatchEvent(new Event("wifiInfoUpdated"))}))}get deviceInfo(){const e=a.sessionInfoObj;return X()&&e?{deviceId:e.deviceId,connectionId:e.connectionId,community:e.community,tenant:e.tenant,clientIp:e.clientIp,countryCode:e.general?.location?.["x-country-code"]}:(r.log("getDeviceInfo running locally, returning dummy info"),{deviceId:"123456789",connectionId:"dummy",community:"LocalDev",tenant:"XXXXXX",clientIp:"0.0.0.0",countryCode:"XX"})}get wifiInfo(){return w}reboot(){return new Promise(((e,t)=>{if(window.cefQuery){const i=s(),n=r.withFields({FCID:i}),o={type:"reboot",fcid:i},a={target:"TC",waitForResponse:!1,message:JSON.stringify(o)};window.cefQuery({request:JSON.stringify(a),persistent:!1,onSuccess:()=>{n.log("reboot request successfully sent"),e(!0)},onFailure:(e,i)=>{n.error(`reboot failed: ${e} ${i}`),t(`reboot failed: ${e} ${i}`)}})}else r.warn("reboot is not supported if NOT running e2e"),t("reboot is not supported if NOT running e2e")}))}clearWifi(){return new Promise(((e,t)=>{const i=s(),n=r.withFields({FCID:i}),o={type:"resetWifi",fcid:i},a={target:"TC",waitForResponse:!1,message:JSON.stringify(o)};window.cefQuery({request:JSON.stringify(a),persistent:!1,onSuccess:()=>{n.log("clearWifi successfully sent"),e(!0)},onFailure:(e,i)=>{n.error(`clearWifi failed: ${e} ${i}`),t(`clearWifi failed: ${e} ${i}`)}})}))}sendDataToDevice(e){if("string"!=typeof e)throw new Error("data must be of type 'string'");return new Promise(((t,i)=>{const n=s(),o=r.withFields({FCID:n}),a={type:"externalCommand",data:{command:"forward",payload:e},fcid:n},d={target:"TC",waitForResponse:!1,message:JSON.stringify(a)};window.cefQuery({request:JSON.stringify(d),persistent:!1,onSuccess:()=>{o.log("externalCommand successfully sent"),t()},onFailure:(e,t)=>{o.error(`externalCommand failed: ${e} ${t}`),i(`externalCommand failed: ${e} ${t}`)}})}))}async factoryReset(e=!0){if("boolean"!=typeof e)throw new Error("reboot param must be of type 'boolean'");return new Promise(((t,i)=>{const n=s(),o=r.withFields({FCID:n}),a={type:"factoryReset",fcid:n,reboot:e},d={target:"TC",waitForResponse:!0,message:JSON.stringify(a)};let l=0;const c=window.cefQuery({request:JSON.stringify(d),persistent:!1,onSuccess:()=>{l&&clearTimeout(l),o.log("factoryReset successfully sent"),t(!0)},onFailure:(e,t)=>{l&&clearTimeout(l),o.error(`factoryReset failed: ${e} ${t}`),i(`factoryReset failed: ${e} ${t}`)}});l=setTimeout((()=>{o.error("factoryReset failed: reached timeout of 5000 ms"),window.cefQueryCancel(c),i("factoryReset failed: reached timeout of 5000 ms")}),5e3)}))}}const m=new p;class h extends EventTarget{constructor(){super(),"undefined"!=typeof document&&document.addEventListener("hs/alarmFiredEvent",(e=>{r.log("Got hs/alarmFiredEvent",JSON.stringify(e.detail)),e.detail?.alarmName&&this.dispatchEvent(new CustomEvent(e.detail.alarmName,{detail:e.detail.payload}))}))}addAlarm(e,t,i){if("string"!=typeof i)throw Error("data must be a string");const n=s(),o=r.withFields({alarmName:e,FCID:n});if(o.log(`addAlarm called for ${e} to be fired at ${t}`),window.cefQuery){const s={type:"addAlarm",fcid:n,alarmName:e,alarmTime:t,payload:i},r={target:"TC",waitForResponse:!1,message:JSON.stringify(s)};window.cefQuery({request:JSON.stringify(r),persistent:!1,onSuccess:()=>{o.log("addAlarm request successfully sent")},onFailure:(e,t)=>{o.error(`addAlarm failed: ${e} ${t}`)}})}else o.warn("addAlarm is not supported if NOT running e2e")}deleteAlarm(e){const t=s(),i=r.withFields({alarmName:e,FCID:t});if(i.log(`deleteAlarm called for ${e}`),window.cefQuery){const n={type:"deleteAlarm",fcid:t,alarmName:e},s={target:"TC",waitForResponse:!1,message:JSON.stringify(n)};window.cefQuery({request:JSON.stringify(s),persistent:!1,onSuccess:()=>{i.log("deleteAlarm request successfully sent")},onFailure:(e,t)=>{i.error(`deleteAlarm failed: ${e} ${t}`)}})}else i.warn("deleteAlarm is not supported if NOT running e2e")}deleteAllAlarms(){if(window.cefQuery){const e=s(),t=r.withFields({FCID:e}),i={type:"deleteAllAlarms",fcid:e},n={target:"TC",waitForResponse:!1,message:JSON.stringify(i)};window.cefQuery({request:JSON.stringify(n),persistent:!1,onSuccess:()=>{t.log("deleteAllAlarms request successfully sent")},onFailure:(e,i)=>{t.error(`deleteAllAlarms failed: ${e} ${i}`)}})}else r.warn("deleteAllAlarms is not supported if NOT running e2e")}getActiveAlarms(){throw Error("NOT IMPLEMENTED")}}const v=new h;"undefined"!=typeof window&&(window.alarmManager=v);class T extends EventTarget{constructor(){super(),"undefined"!=typeof document&&document.addEventListener("hs/externalEvent",(e=>{r.log("Got hs/externalEvent",JSON.stringify(e.detail)),this.dispatchEvent(new CustomEvent("message",{detail:{eventName:e.detail.eventName,payload:e.detail.payload,fcid:e.detail.fcid}}))}))}async registerGroups(e){return r.log(`register called for ${e}`),new Promise(((t,i)=>{if(window.cefQuery){const n=s(),o=r.withFields({FCID:n}),a={type:"registerGroupEvent",fcid:n,groups:e},d={target:"UI-Streamer",waitForResponse:!1,message:JSON.stringify(a)};window.cefQuery({request:JSON.stringify(d),persistent:!1,onSuccess:()=>{o.log("registerGroupEvent request successfully sent"),t(!0)},onFailure:(e,t)=>{o.error(`registerGroupEvent failed: ${e} ${t}`),i(`registerGroupEvent failed: ${e} ${t}`)}})}else r.warn("registerGroupEvent is not supported if NOT running e2e"),i("registerGroupEvent is not supported if NOT running e2e")}))}}const S=new T;let b,I;"undefined"!=typeof window&&(window.messageManager=S),l.getState()?.then((e=>{I=e})),l.addEventListener("onstatechange",(e=>{I=e.state}));const k=e=>{"background"!==I&&"inTransitionToBackground"!==I||(b&&clearTimeout(b),b=setTimeout((()=>{"background"!==I&&"inTransitionToBackground"!==I||r.log(`${e.type} event received while in '${I}' state and there was no call to lifecycle.moveToForeground() for 500 ms. Make sure to call it if you want to move to foreground.`),b=0}),500))};"undefined"!=typeof document&&document.addEventListener("keydown",k),y.addEventListener("error",k),y.addEventListener("ended",k);const{version:_}=i;let E;const O="1.0";"undefined"!=typeof document&&document.addEventListener("keydown",(e=>{r.log(`Got ${e.key} key`)}));const N={getToken:async function(){return E?Promise.resolve(E):(r.log("getToken wait for promise updateSession event"),new Promise((e=>{document.addEventListener("updateSession",(t=>{E=t.detail?.updateObj,r.log(`onUpdateSessionEvent: token= ${E}`),e(E)}),{once:!0})})))},forceTokenUpdate:function(){if(E=null,window.cefQuery){const e=s(),t=r.withFields({FCID:e});t.log("forceTokenUpdate: sending updateSessionRequest");const i={type:"updateSessionRequest",updateKey:"authorization",parentPath:"settings.webUI.backendHeaders.Authorization",fcid:e},n={target:"TC",waitForResponse:!1,message:JSON.stringify(i)};window.cefQuery({request:JSON.stringify(n),persistent:!1,onSuccess:()=>{t.log("updateSessionRequest successfully sent")},onFailure:(e,i)=>{t.error(`updateSessionRequest failed: ${e} ${i}`)}})}else r.error("forceTokenUpdate: window.cefQuery is undefined")},getClientAssertion:M},F=Object.freeze({UNKNOWN:"unknown",INITIAL_CONNECTION:"initial_connection",UI_RELEASE:"ui_release",UI_TERMINATION:"ui_termination",WEBRTC_ERROR:"webrtc_error",UI_WATCHDOG:"ui_watchdog"});let $=F.UNKNOWN,A={};async function C(){if(r.log(`init ${_}`),window.diagnostics||r.error("[ init ] window.diagnostics is undefined"),window.cefQuery){await new Promise(((e,t)=>{window.cefQuery({request:"apiVersion "+O,persistent:!1,onSuccess:()=>{r.log("api version compatability check succeeded"),e()},onFailure:(e,i)=>{r.error("api version compatability check failed: "+i),t(i)}})}));const e=await new Promise((e=>{window.cefQuery({request:"sessionInfo",persistent:!1,onSuccess:t=>{r.log("sessionInfo request successfully returned "+t),e(t)},onFailure:(e,t)=>{r.error(`sessionInfo request failed: ${e} ${t}`)}})}));a.setSessionInfoStr(e);const t=JSON.parse(e);E=t?.settings?.webUI?.backendHeaders?.Authorization,r.log(`authToken: token = ${E}`),document.addEventListener("updateSession",(e=>{E=e.detail?.updateObj,r.log(`onUpdateSessionEvent: token = ${E}`)})),t?.settings?.["ui-streamer"]?.enableKeyPressDuration&&function(){const e=document.createElement("div");e.setAttribute("style","height: 8px; width: 8px; background-color: red; position: absolute; left: 0px; top: 0px; z-index: 9999;"),document.body.appendChild(e),document.addEventListener("keydown",(()=>{"red"===e.style.backgroundColor?e.style.backgroundColor="blue":"blue"===e.style.backgroundColor?e.style.backgroundColor="green":e.style.backgroundColor="red"}))}(),$=await new Promise((e=>{const t=s(),i=r.withFields({FCID:t}),n={type:"connectReason",fcid:t},o={target:"UI-Streamer",waitForResponse:!1,message:JSON.stringify(n)};window.cefQuery({request:JSON.stringify(o),persistent:!1,onSuccess:t=>{i.log(`connectReason request successfully returned '${t}'`),e(t)},onFailure:(t,n)=>{i.error(`connectReason request failed: ${t} ${n}`),e(F.UNKNOWN)}})}));const i=await new Promise((e=>{const t=s(),i=r.withFields({FCID:t}),n={type:"triggerEvent",fcid:t},o={target:"UI-Streamer",waitForResponse:!1,message:JSON.stringify(n)};window.cefQuery({request:JSON.stringify(o),persistent:!1,onSuccess:t=>{i.log(`triggerEvent request successfully returned '${t}'`),e(t)},onFailure:(t,n)=>{i.error(`triggerEvent request failed: ${t} ${n}`),e("")}})}));A={};let n={};if(i)try{n=JSON.parse(i),A.type=n.type,"keyPressEvent"===A.type?A.data={keyValue:n.keyValue}:"alarmFiredEvent"===A.type?A.data={alarmName:n.alarmName,payload:n.payload}:"userAlertEvent"===A.type?A.data={eventCode:n.eventCode,message:n.message}:"externalEvent"===A.type?A.data={eventName:n.eventName,payload:n.payload}:"videoPlaybackEvent"===A.type?A.data={eventCode:n.eventCode,errorCode:n.errorCode}:r.warn("unknown trigger event type",A.type)}catch(e){r.error(`failed to parse trigger event string ${i}: ${e.message}`)}await y._init(t?.settings?.["ui-streamer"],n)}else E=P().sessionInfo?.settings?.webUI?.backendHeaders?.Authorization,r.log(`authToken dummy: token = ${E}`);window.auth=N,window.close=()=>{r.warn("window.close is disabled on Senza platform. Use lifecycle.exitApplication() instead.")}}function q(){return $}function L(){return A}function P(){if("undefined"==typeof window||!window.diagnostics)return"undefined"==typeof window||window.diagnostics||r.error("[ getPlatformInfo ] window.diagnostics is undefined"),{version:"X.X.XX-X",pod:"ui-streamer-X.X.XX-X-QWERT-ASDFG-XXX-XXXXXX-XXXXX",podIP:"0.0.0.0",sessionInfo:{userAgent:"SynamediaSenza/XX.YY.ZZ",connectionId:"dummy",deviceId:"123456789",community:"LocalDev",tenant:"XXXXXX",tenantId:"XXXXXX",manifest:{transcontainer:"X.X.XX-X"},settings:{webUI:{backendHeaders:{Authorization:"Bearer dummytoken"}}},homeSessionInfo:{tenantId:"XXXXXX",community:"LocalDev"}}};try{const e=window.diagnostics()||{};return e.sessionInfo=a.sessionInfoObj,e}catch(e){r.error("Could not get platform info",e.stack)}}function R(e){if(window.cefQuery){const t={message:JSON.stringify({type:"setTimeZone",timezone:e}),waitForResponse:!1,target:"UI-Streamer"};window.cefQuery({request:JSON.stringify(t),persistent:!1,onSuccess:()=>{r.log("timezome is successfully set to",e)},onFailure:(t,i)=>{r.error(`error occurred setting timezone to ${e}: ${t} ${i}`)}})}}function X(){return!("undefined"==typeof window||!window.cefQuery)}function D(){window.cefQuery?window.cefQuery({request:"uiReady",persistent:!1,onSuccess:()=>{r.log("uiReady request successfully sent")},onFailure:(e,t)=>{r.error(`uiReady request failed: ${e} ${t}`)}}):r.error("uiReady: window.cefQuery is undefined")}function J(){const e=a.sessionInfoObj;return X()?{deviceId:e.deviceId,connectionId:e.connectionId,community:e.community,tenant:e.tenant,clientIp:e.clientIp}:(r.log("getDeviceInfo running locally, returning dummy info"),{deviceId:"123456789",connectionId:"dummy",community:"LocalDev",tenant:"XXXXXX",clientIp:"0.0.0.0"})}const Q={remoteBrowserIp:window.diagnostics?window.diagnostics().podIP:"127.0.0.1",sdkVersion:_};function x(e,t,i,n){if(200===e&&(t=window.btoa(String.fromCharCode.apply(null,new Uint8Array(t)))),window.cefQuery){const s={type:"updateLicense",sessionId:n,fcid:i};s[200===e?"response":"error"]=t;const o={target:"TC",waitForResponse:!1,message:JSON.stringify(s)};window.cefQuery({request:JSON.stringify(o),persistent:!1,onSuccess:()=>{r.log("updateLicense request successfully sent")},onFailure:(e,t)=>{r.error(`updateLicense request failed: ${e} ${t}`)}})}}class U extends Error{constructor(e,t){super(t),this.code=e}}function M(){if(window.cefQuery)return r.log("getClientAssertion is called"),new Promise(((e,t)=>{window.cefQuery({request:"client_assertion",persistent:!1,onSuccess:i=>{try{const t=JSON.parse(i);r.log(`client_assertion request successfully returned ${i}`),e(t)}catch(e){r.error(`Failed to parse client assertion ${i}`),t(new U(0,"Failed to parse client assertion"))}},onFailure:(e,i)=>{r.log(`client_assertion request failed: ${e} ${i}`),t(new U(e,i))}})}));r.warn("getClientAssertion is not supported if NOT running e2e")}return t})()));